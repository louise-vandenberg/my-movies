[{"name":"Card","type":"CARD","allowedTypes":[],"orientation":"HORIZONTAL","jsx":"(() => {\n  if (B.env === 'dev') {\n    return <div className={classes.root}>\n                     <div className={classes.heading}>\n                         TITLE\n                     </div>\n                     <div className={classes.image}>\n                         IMAGE\n                     </div>\n                </div>;\n  } else {\n    const heading = B.useText(options.headingVariable);\n    const image = B.useText(options.imageVariable);\n    let description = B.useText(options.descriptionVariable);\n    description = description.substring(0, 100) + \"...\";\n    const genre = B.useText(options.genreVariable);\n    const votes = B.useText(options.votesVariable);\n    return <div className={classes.main}>\n                    <div className={classes.heading}>\n                        {heading}\n                    </div>\n                    <div className={classes.imageC}>\n                         <img className={classes.image} src={image}></img>\n                    </div>\n                    <div className={classes.subtitle1}>\n                        {genre}\n                    </div>\n                    <div className={classes.subtitle2}>\n                        {votes}\n                    </div>\n                    <div className={classes.description}>\n                       {description}\n                    </div>\n                    <div className={classes.footer}>\n                       <B.Link>View more</B.Link>\n                    </div>\n                    \n           </div>;\n  }\n})()","styles":"B => ({\n  typography\n}) => ({\n  main: {\n    backgroundColor: \"aliceblue\",\n    fontFamily: \"Comic Sans MS\",\n    padding: '15px',\n    boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n    display: 'grid',\n    gridGap: '20px',\n    gridTemplateAreas: `\"content header header\" \n                                 \"content subtitle1 subtitle2\" \n                                 \"content description description\"\n                                 \"content footer footer\"`,\n    [`@media (max-height: 813px)`]: {\n      gridTemplateAreas: `\"content content\" \n                    \"header header\" \n                    \"subtitle1 subtitle2\"\n                    \"description description\"\n                    \"footer footer\"`\n    }\n  },\n  heading: {\n    gridArea: 'header',\n    fontSize: '20px',\n    fontWeight: 'bold',\n    [`@media (max-height: 813px)`]: {\n      fontSize: '18px'\n    }\n  },\n  imageC: {\n    gridArea: 'content',\n    justifySelf: 'center'\n  },\n  image: {\n    height: '250px',\n    width: '200px',\n    [`@media (max-height: 813px)`]: {\n      width: '150px',\n      height: '120px'\n    }\n  },\n  subtitle1: {\n    gridArea: 'subtitle1',\n    fontSize: '15px',\n    [`@media (max-height: 813px)`]: {\n      fontSize: '12px'\n    }\n  },\n  subtitle2: {\n    gridArea: 'subtitle2',\n    fontSize: '15px',\n    [`@media (max-height: 813px)`]: {\n      fontSize: '12px'\n    }\n  },\n  description: {\n    gridArea: 'description',\n    fontSize: '17px',\n    [`@media (max-height: 813px)`]: {\n      fontSize: '14px'\n    }\n  },\n  footer: {\n    gridArea: 'footer',\n    fontSize: '15px',\n    justifySelf: 'end',\n    [`@media (max-height: 813px)`]: {\n      fontSize: '12px'\n    }\n  }\n})"},{"name":"CardContainer","type":"ROW","allowedTypes":["CARD"],"orientation":"HORIZONTAL","jsx":"(() => {\n  if (B.env === 'dev') {\n    return <div className={classes.root}>\n                    bleh {children}\n                </div>;\n  } else {\n    const {\n      GetAll\n    } = B;\n    const {\n      modelId\n    } = options;\n    return <div className={classes.root}>\n                    <GetAll modelId={modelId} skip={0} take={10}>\n                        {({\n          loading,\n          error,\n          data,\n          refetch\n        }) => {\n          if (loading) {\n            return <div>Loading</div>;\n          }\n\n          if (error) {\n            return <div>Error: {error.message}</div>;\n          }\n\n          const {\n            results\n          } = data;\n          return <div className={classes.container}>\n                                {results.map(item => <div className={classes.cardGrid}>\n                                    <B.GetOneProvider key={item.id} value={item}>\n                                        {children}\n                                    </B.GetOneProvider>\n                                  </div>)}\n                                  <div className={classes.cardGrid}></div>\n                                  <div className={classes.cardGrid}></div>\n                            </div>;\n        }}\n                    </GetAll>\n                </div>;\n  }\n})()","styles":"B => ({\n  typography\n}) => ({\n  root: {\n    background: 'rgb(2,0,36)',\n    background: 'linear-gradient(90deg, rgba(50,3,3,1) 0%, rgba(121,9,9,1) 47%, rgba(205,54,54,1) 100%)',\n    display: 'block',\n    overflow: 'auto',\n    height: '100%'\n  },\n  container: {\n    padding: '70px 5% 5% 5%',\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    // '&::after': {\n    //   content: \"''\",\n    //   flex:'auto'\n    // },\n    [`@media (max-height: 813px)`]: {\n      padding: '70px 10px 50px 10px'\n    }\n  },\n  cardGrid: {\n    padding: '10px',\n    width: '500px',\n    height: '284px',\n    [`@media (max-height: 813px)`]: {\n      width: '280px',\n      height: '380px'\n    }\n  }\n})"},{"name":"Landingpage","type":"ROW","allowedTypes":[],"orientation":"HORIZONTAL","jsx":"<div className={classes.root}>\n          <div className={classes.container}>\n              <div className={classes.content}>\n                  <h1 className={classes.heading}>Movies</h1>\n                 <h3 className={classes.subHeading}>Welcome to my movie app, created using page builder</h3>\n                  <B.Link endpointId={options.endpointId}><button className={classes.btn}>View</button></B.Link>\n              </div>\n              \n          </div>\n    </div>","styles":"B => ({\n  typography\n}) => ({\n  root: {\n    height: '100%',\n    width: '100%',\n    backgroundImage: \"url('https://images.unsplash.com/photo-1507924538820-ede94a04019d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2700&q=80')\",\n    backgroundRepeat: 'no-repeat',\n    backgroundAttachment: 'fixed',\n    backgroundPosition: 'center'\n  },\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '35%',\n    width: '100%',\n    backgroundImage: \"url('https://images.unsplash.com/photo-1524985069026-dd778a71c7b4?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2702&q=80')\",\n    backgroundRepeat: 'no-repeat',\n    backgroundAttachment: 'fixed',\n    backgroundPosition: 'center',\n    boxShadow: \"0 0 8px 8px #6e1414 inset\",\n    [`@media (max-height: 813px) and (max-width: 1317px)`]: {\n      height: '50%'\n    }\n  },\n  content: {\n    color: 'white',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column'\n  },\n  heading: {\n    color: 'white',\n    fontSize: '40px',\n    textShadow: '2px 2px 4px #000000',\n    [`@media (max-height: 813px) and (max-width: 1317px)`]: {\n      fontSize: '25px'\n    }\n  },\n  subHeading: {\n    textAlign: 'center',\n    [`@media (max-height: 813px) and (max-width: 1317px)`]: {\n      fontSize: '15px'\n    }\n  },\n  btn: {\n    backgroundColor: '#6e1414',\n    border: 'none',\n    color: 'white',\n    padding: '15px 32px',\n    textAlign: 'center',\n    textDecoration: 'none',\n    display: 'inline-block',\n    fontSize: '16px',\n    borderRadius: '10px',\n    cursor: 'pointer',\n    marginTop: '30px',\n    marginBottom: '30px',\n    [`@media (max-height: 813px) and (max-width: 1317px)`]: {\n      fontSize: '15px'\n    }\n  }\n})"},{"name":"Navbar","type":"ROW","allowedTypes":[],"orientation":"HORIZONTAL","jsx":"(() => {\n  if (B.env === 'dev') {\n    return <div className={classes.root}>\n                    Navbar\n                </div>;\n  } else {\n    const {\n      HomeEndpoint\n    } = options;\n    return <div className={classes.root}>\n                    <li className={classes.link}>\n                        <B.Link endpointId={HomeEndpoint} className={classes.linkItem}>Home</B.Link>\n                    </li>\n                    <li className={classes.link}>\n                         <B.Link className={classes.linkItem}>New Movie</B.Link>\n                    </li>\n                  \n                </div>;\n  }\n})()","styles":"B => ({\n  typography\n}) => ({\n  root: {\n    background: 'black',\n    position: 'fixed',\n    top: '0',\n    width: '100%',\n    padding: '20px',\n    height: '30px',\n    textAlign: 'center',\n    [`@media (max-height: 813px)`]: {\n      height: '20px',\n      padding: '15px'\n    }\n  },\n  link: {\n    listStyleType: 'none',\n    display: 'inline',\n    paddingRight: '50px'\n  },\n  linkItem: {\n    textDecoration: 'none',\n    color: 'white',\n    fontFamily: 'Arial Black',\n    fontSize: '25px',\n    background: 'rgba(121,9,9,1)',\n    padding: '5px',\n    borderRadius: '5px',\n    boxShadow: \"0 0 8px 8px #6e1414 inset\",\n    [`@media (max-height: 813px)`]: {\n      fontSize: '15px'\n    }\n  }\n})"}]
