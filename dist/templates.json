[{"name":"Card","type":"CARD","allowedTypes":[],"orientation":"HORIZONTAL","jsx":"(() => {\n  if (B.env === 'dev') {\n    return <div className={classes.root}>\n                     <div className={classes.heading}>\n                         TITLE\n                     </div>\n                     <div className={classes.image}>\n                         IMAGE\n                     </div>\n                </div>;\n  } else {\n    const heading = B.useText(options.headingVariable);\n    const image = B.useText(options.imageVariable);\n    let description = B.useText(options.descriptionVariable);\n    description = description.substring(0, 100) + \"...\";\n    const genre = B.useText(options.genreVariable);\n    const votes = B.useText(options.votesVariable);\n    return <div className={classes.main}>\n                    <div className={classes.heading}>\n                        <label>{heading}</label>\n                    </div>\n                    <div className={classes.imageC}>\n                         <img className={classes.image} src={image}></img>\n                    </div>\n                    <div className={classes.subtitle}>\n                        <label>{genre}{votes}</label>\n                    </div>\n                    <div className={classes.description}>\n                        <label>{description}</label>\n                    </div>\n                    \n           </div>;\n  }\n})()","styles":"B => ({\n  typography\n}) => ({\n  main: {\n    backgroundColor: \"aliceblue\",\n    padding: '10px',\n    boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n    display: 'grid',\n    gridGap: '10px',\n    gridTemplateAreas: `\"content header header\" \n                                 \"content subtitle subtitle\" \n                                 \"content description description\"`\n  },\n  heading: {\n    gridArea: 'header'\n  },\n  imageC: {\n    gridArea: 'content'\n  },\n  image: {\n    height: '200px',\n    width: '200px'\n  },\n  subtitle: {\n    gridArea: 'subtitle'\n  },\n  description: {\n    gridArea: 'description'\n  }\n})"},{"name":"CardContainer","type":"ROW","allowedTypes":["CARD"],"orientation":"HORIZONTAL","jsx":"(() => {\n  if (B.env === 'dev') {\n    return <div className={classes.root}>\n                    bleh {children}\n                </div>;\n  } else {\n    const {\n      GetAll\n    } = B;\n    const {\n      modelId\n    } = options;\n    return <div className={classes.root}>\n                    <GetAll modelId={modelId} skip={0} take={10}>\n                        {({\n          loading,\n          error,\n          data,\n          refetch\n        }) => {\n          if (loading) {\n            return <div>Loading</div>;\n          }\n\n          if (error) {\n            return <div>Error: {error.message}</div>;\n          }\n\n          const {\n            results\n          } = data;\n          return <div className={classes.container}>\n                                {results.map(item => <div className={classes.cardGrid}>\n                                    <B.GetOneProvider key={item.id} value={item}>\n                                        {children}\n                                    </B.GetOneProvider>\n                                  </div>)}\n                            </div>;\n        }}\n                    </GetAll>\n                </div>;\n  }\n})()","styles":"B => ({\n  typography\n}) => ({\n  root: {\n    padding: '10%',\n    height: '100%',\n    width: '100%'\n  },\n  container: {\n    display: 'flex',\n    height: '100%',\n    width: '100%',\n    flexWrap: 'wrap',\n    justifyContent: 'space-evenly'\n  },\n  cardGrid: {\n    width: '400px'\n  }\n})"},{"name":"Landingpage","type":"ROW","allowedTypes":[],"orientation":"HORIZONTAL","jsx":"<div className={classes.root}>\n          <div className={classes.container}>\n              <div className={classes.content}>\n                  <h1 className={classes.heading}>Movies</h1>\n                 <h3 className={classes.subHeading}>Welcome to my movie app, created using page builder</h3>\n                  <B.Link endpointId={options.endpointId}><button className={classes.btn}>View</button></B.Link>\n              </div>\n              \n          </div>\n    </div>","styles":"B => ({\n  typography\n}) => ({\n  root: {\n    height: '100%',\n    width: '100%',\n    backgroundImage: \"url('https://images.unsplash.com/photo-1507924538820-ede94a04019d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2700&q=80')\",\n    backgroundRepeat: 'no-repeat',\n    backgroundAttachment: 'fixed',\n    backgroundPosition: 'center'\n  },\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '35%',\n    width: '100%',\n    backgroundImage: \"url('https://images.unsplash.com/photo-1524985069026-dd778a71c7b4?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2702&q=80')\",\n    backgroundRepeat: 'no-repeat',\n    backgroundAttachment: 'fixed',\n    backgroundPosition: 'center',\n    boxShadow: \"0 0 8px 8px #6e1414 inset\",\n    [`@media (max-height: 800px)`]: {\n      height: '50%'\n    }\n  },\n  content: {\n    color: 'white',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column'\n  },\n  heading: {\n    color: 'white',\n    fontSize: '40px',\n    textShadow: '2px 2px 4px #000000',\n    [`@media (max-height: 800px)`]: {\n      fontSize: '25px'\n    }\n  },\n  subHeading: {\n    textAlign: 'center',\n    [`@media (max-height: 800px)`]: {\n      fontSize: '15px'\n    }\n  },\n  btn: {\n    backgroundColor: '#6e1414',\n    border: 'none',\n    color: 'white',\n    padding: '15px 32px',\n    textAlign: 'center',\n    textDecoration: 'none',\n    display: 'inline-block',\n    fontSize: '16px',\n    borderRadius: '10px',\n    cursor: 'pointer',\n    marginTop: '30px',\n    marginBottom: '30px',\n    [`@media (max-height: 800px)`]: {\n      fontSize: '15px'\n    }\n  }\n})"}]
